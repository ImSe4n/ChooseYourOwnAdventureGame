# REQUIREMENTS
"""
Each time the user visits somewhere in the setting, there should be a screen output that describes the landmark (be creative!)
At least 7 locations
At least 2 of your functions must have parameters.
At least 2 of your functions must return values. 
The user has choices to make throughout the program (e.g. where to go next, whether to pick up an item, etc.)
The program main or a main function has a loop that serves as the central base for the program. All other location functions are called from and return to the main loop.
Header, comments, and docstrings for all functions.
GUI is required for this assignment, use Tkinter.
"""
# CRIERIA
"""
Loops have logical conditions
if/elif/else used appropriately
Format: header, import statements, functions, main body of program
The main program or a main function is used as a base. All other location functions are called from and return to the main.
2 or more functions have parameters
2 or more functions return a value 
Parameters & returns add functionality to the program
At least 5 locations with individual functions
The user has choices to make throughout the game (e.g. which location to go to, whether to engage with an NPC)
Clear understanding of parameters (e.g. name of parameter is different than the global variable defined in the main program)
Program includes a header
Code blocks have appropriate & descriptive comments
User instructions are clear and accurate
All functions have docstrings
References are provided in comments 
Program is effectively represented using a flowchart
Code uses minimum number of steps required to solve problems
Exceptions are detected, intercepted, and handled
"""
# GAME DESCRIPTION
"""
Game name: FlyFlyFly
Task: Get to the hangar and find all the required keys and equipment to start the plane and get out of the airport
Locations: (minigames)
1. Tarmac - starting location with a key
2. Terminal - has a lounge, ticket counter, and a security checkpoint
3. Lounge - has a key to enter the security checkpoint, minigame to get the key
4. Ticket counter - has a minigame to earn cash to buy fuel -- depending on how quickly you beat the game you earn cash
5. Security Checkpoint - Has a key to enter the air traffic control tower and the hangar. Complete a minigame to get both keys
6. Air traffic control tower - has a blackbox, radio, and detailed flight plan. Must complete a minigame to get the items
7. Hangar - has the plane, and more equipment (GPU, staircase, etc.) to start the plane. Must complete a minigame to start the plane.
8 . Fuel station - has fuel, must have cash to buy fuel ($70,000) to start the plane
9. Plane - must start the plane to win the game
"""
"""
U6-A2 Adventure Game
ICS3U-01
Sean Nie
Description: A text-based adventure game where the player plays in minigames to get keys and items to start the plane and escape.
2024-01-16: V1
"""

import time
import random
inventory = []
cash = 0


def colored_letter(letter, color):
    """
    Function: colored_letter
    Description: This function returns the colored letter based on the color provided.
    Parameters: str, str
    Returns: str
    """
    colors = {"green": "\033[92m", "yellow": "\033[93m",
              "gray": "\033[90m", "reset": "\033[0m"}
    return f"{colors[color]}{letter}{colors['reset']}"


def wordle():
    """
    Function: wordle
    Description: This function represents the wordle minigame where the player must guess a 5 letter word to get the key.
    Parameters: None
    Returns: None
    """
    # Generated by AI
    word_list = [
        "apple", "beach", "crane", "dance", "eagle", "fable", "giant", "honey", "igloo", "jolly",
        "karma", "lemon", "mango", "noble", "olive", "pearl", "quilt", "robin", "sugar", "tiger",
        "umbra", "vivid", "whale", "xenon", "yacht", "zebra", "abide", "blink", "crisp", "dwell",
        "elbow", "flame", "glide", "haste", "infer", "joust", "knack", "latch", "mirth", "nudge",
        "otter", "pluck", "quirk", "rival", "swoop", "tread", "usher", "vapor", "widen", "yearn",
        "abyss", "bluff", "chirp", "dodge", "ember", "froth", "grasp", "hover", "ivory", "jelly",
        "kiosk", "lurid", "mossy", "nymph", "opium", "pique", "quell", "rivet", "swirl", "tryst",
        "ultra", "viper", "waltz", "xylem", "yodel", "zesty", "amble", "brisk", "clasp", "drape",
        "evoke", "flint", "grime", "hitch", "inlay", "joust", "kayak", "lurch", "molar", "nudge",
        "oasis", "prank", "quash", "relic", "snipe", "tweak", "unzip", "vixen", "wryly", "zonal"
    ]

    secret_word = random.choice(word_list)
    attempts = 6

    print("Welcome to Wordle! Guess the 5-letter word.")

    for attempt in range(attempts):
        guess = input("Enter your guess: ").lower()

        if len(guess) != 5 or not guess.isalpha():
            print("Invalid guess. Please enter a 5-letter word.")
            continue

        if guess == secret_word:
            print("\033[92mCongratulations! You guessed the word!\033[0m")
            inventory.append('s_key')
            return None

        feedback = ""
        for i in range(5):
            if guess[i] == secret_word[i]:
                feedback += colored_letter(guess[i], "green")
            elif guess[i] in secret_word:
                feedback += colored_letter(guess[i], "yellow")
            else:
                feedback += colored_letter(guess[i], "gray")

        print(feedback)

    print(f"Game over! The word was: {secret_word}. Please try again in 15 seconds.")
    time.sleep(15)


def tarmac():
    """
    Function: tarmac
    Description: This function represents the tarmac location where the player starts. The player can choose to go to the terminal or stay here.
    Args: None
    Returns: str
    """
    print("You are on the tarmac. You are given a key to the terminal.")
    print("You can go to the terminal or stay here.")
    choice = input("Enter \n '1' to stay here \n '2' to go to the terminal \n 'e' to quit the game \n")

    while choice != '1' and choice != '2' and choice != 'e':
        print("Invalid choice. Please enter a valid choice.")
        choice = input("Enter \n '1' to stay here \n '2' to go to the terminal \n 'e' to quit the game \n")
    return choice


def terminal():
    """
    Function: terminal
    Description: This function represents the terminal location where the player can choose to go to the lounge, ticket counter, or security checkpoint.
    Parameters: None
    Returns: str
    """
    if 'atc_key' and 's_key' in inventory:
        print("You have all the keys and can go to the air traffic control tower and hangar.")
        return '5'
    print("You are in the terminal. You can go to the lounge, ticket counter, or security checkpoint.")
    print("You can go to the lounge, ticket counter, or security checkpoint.")
    choice = input(
        "Enter 'l' to go to the lounge, 't' to go to the ticket counter, or 's' to go to the security checkpoint: ")
    return choice


def lounge():
    """
    Function: lounge
    Description: This function represents the lounge location where the player can play a minigame to get a key to the security checkpoint.
    Parameters: None
    Returns: str
    """
    if 's_key' in inventory:
        print("You have already visited the lounge and obtained the key.")
        return '2'

    print("You are in the lounge. You see a key on the table.")
    print("You can play a minigame to get the key.")
    choice = input(
        "Enter 'start' to begin the minigame or '2' to go back to the terminal: ")
    if choice == 'start':
        print("You must guess the number from 1-100 to get the key. You will have 6 tries. I will tell you if the number is higher or lower.")
        low = 1
        high = 100
        number = random.randint(low, high)
        tries = 5
        guess = int(input("Enter your guess: "))
        while tries >= 0:
            if guess == number:
                print("You got the key!")
                inventory.append('s_key')
                return '2'
            elif guess < number:
                print("Higher")
            else:
                print("Lower")
            tries -= 1
            guess = int(input("Enter your guess: "))
        print("You ran out of tries. Please make another guess again in 15 seconds.")
        time.sleep(15)
    else:
        return '2'


def ticket_counter():
    """
    Function: ticket_counter
    Description: This function represents the ticket counter location where the player can play a minigame to earn cash to buy fuel.
    Parameters: None
    Returns: str
    """
    print("You are at the ticket counter. You can play a minigame to earn cash to buy fuel.")
    print("You can blackjack against the computer to earn cash to buy fuel.")
    choice = input(
        "Enter 'start' to play the minigame or 't' to return to the main terminal: ")
    if choice == 'start':
        print("You will play blackjack against the computer. You will start with $10000. Enter hit or stand to play.")
        global cash
        cash = 10000
        while cash > 0:
            print("Your cash: $", cash)

            bet = int(input("Enter your bet: "))
            while bet > cash or bet <= 0:
                print("Invalid bet. Please enter a valid bet.")
                bet = int(input("Enter your bet: "))

            player_hand = random.randint(1, 11) + random.randint(1, 11)
            computer_hand = random.randint(1, 11) + random.randint(1, 11)
            print("Your hand: ", player_hand)
            cash -= bet

            player_choice = input("Enter 'hit' or 'stand': ")
            while player_choice == 'hit':
                player_hand += random.randint(1, 11)
                print("Your hand: ", player_hand)
                if player_hand > 21:
                    print("You busted! You lose.")
                    cash -= bet
                    break
                player_choice = input("Enter 'hit' or 'stand': ")
            if player_hand < 21:
                while computer_hand < 17:
                    computer_hand += random.randint(1, 11)
                if computer_hand > 21 or player_hand > computer_hand:
                    print("You win!")
                    cash += bet * 2
                else:
                    print("You lose.")
                    cash -= bet
            elif player_hand == 21:
                print("You win!")
                cash += bet * 2
            if cash >= 70000:
                print("You have enough cash to buy fuel. You can go to the fuel station. - stop gambling >:(")
        print("You ran out of cash. Please play again in 15 seconds.")
        time.sleep(15)
    return '2'


def security_checkpoint():
    """
    Function: security_checkpoint
    Description: This function represents the security checkpoint location where the player can play a minigame to get keys to the air traffic control tower and hangar.
    Parameters: None
    Returns: str
    """
    if 'atc_key' in inventory:
        print("You have already visited the security checkpoint and obtained the ATC key.")
        return '2'

    print("You are at the the security checkpoint. You see keys on the table.")
    print("You can play wordle to get the key.")
    choice = input(
        "Enter 'start' to begin the minigame or 't' to go back to the main terminal: ")
    if choice == 'start':
        wordle()
    else:
        return '2'


def air_traffic_control_tower():
    """
    Function: air_traffic_control_tower
    Description: This function represents the air traffic control tower location where the player can play a minigame to get items.
    Parameters: None
    Returns: str
    """
    if 'blackbox' and 'radio' in inventory:
        print(
            "You have already visited the air traffic control tower and obtained the items.")
        return '8'

    print("You are in the air traffic control tower. You see a blackbox and radio on the table.")
    print("You can pick these items up or leave.")
    choice = input("Enter '7' to get the items: ")
    if choice == '7':
        inventory.append('blackbox')
        inventory.append('radio')
    else:
        return '5'


def hangar():
    """
    Function: hangar
    Description: This function represents the hangar location where the player can play a minigame to start the plane.
    Parameters: None
    Returns: str
    """
    print("You are in the hangar. You see the plane and equipment to start the plane.")
    print("You can play a minigame to start the plane.")
    choice = input("Enter '8' to start the plane: ")
    return choice


def fuel_station():
    """
    Function: fuel_station
    Description: This function represents the fuel station location where the player can buy fuel to start the plane.
    Parameters: None
    Returns: str
    """
    print("You are at the fuel station. You can buy fuel to start the plane.")
    print("You can buy fuel to start the plane.")
    choice = input("Enter '9' to buy fuel: ")
    if choice == '9':
        while cash < 70000:
            print("You do not have enough cash to buy fuel. Please go back to the ticket counter to earn more cash.")
            return '2'  # Return to the ticket counter
        else:
            print("You have enough cash to buy fuel. You can start the plane.")
            cash -= 70000
        return '10'


def plane():
    """
    Function: plane
    Description: This function represents the plane location where the player must start the plane to win the game.
    Parameters: None
    Returns: str
    """
    print("You are at the plane. You must start the plane to win the game.")
    print("You must start the plane to win the game.")
    choice = input("Enter 'e' to exit the game: ")
    return choice


def main():
    print("Welcome to FlyFlyFly! You are at the airport and need to start the plane to escape.")

    # initialize user to start in location 1
    choice = '1'

    # Keep looping until the user exits
    while choice != 'e':
        # Depending on the user choice, call associated function
        if choice == '1':
            choice = tarmac()
        elif choice == '2':
            choice = terminal()
        elif choice == '3':
            choice = hangar()
        elif choice == '4':
            choice = fuel_station()
        elif choice == '5':
            choice = air_traffic_control_tower()
        elif choice == 's':
            choice = security_checkpoint()
        elif choice == 't':
            choice = ticket_counter()
        elif choice == 'l':
            choice = lounge()

    print("Thanks for playing!")


# Call the main function to start the game
main()
