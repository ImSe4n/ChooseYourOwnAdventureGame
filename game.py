"""
U6-A2 Adventure Game
ICS3U-01
Sean Nie
Description: A text-based adventure game where the player plays in minigames to get keys and items to start the plane and escape.
2024-01-16: V1
"""

import time
import random

inventory = []
global cash
cash = 10000
battery = 'not charged'


def colored_letter(letter, color):
    """
    Function: colored_letter
    Description: This function returns the colored letter based on the color provided.
    Parameters: str, str
    Returns: str
    """
    colors = {"green": "\033[92m", "yellow": "\033[93m",
              "gray": "\033[90m", "reset": "\033[0m"}
    return f"{colors[color]}{letter}{colors['reset']}"


def wordle():
    """
    Function: wordle
    Description: This function represents the wordle minigame where the player must guess a 5 letter word to get the key.
    Parameters: None
    Returns: None
    """
    # word_list generated by AI
    word_list = [
        "apple", "beach", "crane", "dance", "eagle", "fable", "giant", "honey", "igloo", "jolly",
        "karma", "lemon", "mango", "noble", "olive", "pearl", "quilt", "robin", "sugar", "tiger",
        "umbra", "vivid", "whale", "xenon", "yacht", "zebra", "abide", "blink", "crisp", "dwell",
        "elbow", "flame", "glide", "haste", "infer", "joust", "knack", "latch", "mirth", "nudge",
        "otter", "pluck", "quirk", "rival", "swoop", "tread", "usher", "vapor", "widen", "yearn",
        "abyss", "bluff", "chirp", "dodge", "ember", "froth", "grasp", "hover", "ivory", "jelly",
        "kiosk", "lurid", "mossy", "nymph", "opium", "pique", "quell", "rivet", "swirl", "tryst",
        "ultra", "viper", "waltz", "xylem", "yodel", "zesty", "amble", "brisk", "clasp", "drape",
        "evoke", "flint", "grime", "hitch", "inlay", "joust", "kayak", "lurch", "molar", "nudge",
        "oasis", "prank", "quash", "relic", "snipe", "tweak", "unzip", "vixen", "wryly", "zonal"
    ]

    secret_word = random.choice(word_list)
    attempts = 6

    print("Welcome to Wordle! Guess the 5-letter word.")

    for attempt in range(attempts):
        guess = input("Enter your guess: ").lower()

        while len(guess) != 5 or not guess.isalpha():
            print("Invalid guess. Please enter a 5-letter word.")
            guess = input("Enter your guess: ").lower()

        if guess == secret_word:
            print("\033[92mCongratulations! You guessed the word!\033[0m")
            inventory.append('atc_key')
            return '2'

        feedback = ""
        for i in range(5):
            if guess[i] == secret_word[i]:
                feedback += colored_letter(guess[i], "green")
            elif guess[i] in secret_word:
                feedback += colored_letter(guess[i], "yellow")
            else:
                feedback += colored_letter(guess[i], "gray")

        print(feedback)

    print(f"Game over! The word was: {
          secret_word}. Please try again in 15 seconds.")
    time.sleep(15)
    return security_checkpoint()


def hangman():
    # List of words to choose from
    words = ["python", "programming", "hangman",
             "challenge", "developer", "algorithm"]

    # Select a random word
    word = random.choice(words)

    # Set of unique letters in the word
    word_letters = set(word)

    # Set of correctly guessed letters
    guessed_letters = set()

    # Number of attempts allowed
    attempts = 6

    while attempts > 0 and word_letters:
        # Display the current state of the word
        display_word = "".join(
            [letter if letter in guessed_letters else "_" for letter in word])
        print(f"Word: {display_word}")

        # Display remaining attempts
        print(f"Attempts left: {attempts}")

        # Display guessed letters
        print(f"Guessed letters: {', '.join(guessed_letters)}")

        # Get user input
        guess = input("Guess a letter: ").lower()

        # Validate the input
        if len(guess) != 1:
            print("Please enter exactly one letter.")
        elif not guess.isalpha():
            print("Please enter a valid letter of the alphabet.")
        elif guess in guessed_letters:
            print("You already guessed that letter. Try again.")
        elif guess in word_letters:
            print("Good guess!")
            guessed_letters.add(guess)
            word_letters.discard(guess)
        else:
            print("Wrong guess!")
            guessed_letters.add(guess)
            attempts -= 1

        # Display guessed letters
        print(f"Guessed letters: {', '.join(guessed_letters)}")
        print()

    # Game over message
    if not word_letters:
        print(f"Congratulations! You guessed the word: {word}")
        inventory.append('h_key')
        return '2'
    else:
        print(f"Game over! The word was: {
              word}. Please try again in 15 seconds.")
        time.sleep(15)
        return office()


def tarmac():
    """
    Function: tarmac
    Description: This function represents the tarmac location where the player starts. The player can choose to go to the terminal or stay here.
    Args: None
    Returns: str
    """
    print("You are on the tarmac. You are given a key to the terminal.")
    print("You can go to the terminal or stay here.")
    choice = input("Enter \n '1' to stay here \n '2' to go to the TERMINAL \n '3' to go to the FUEL TANK \n '4' to go to the ATC TOWER \n '5' to go to the HANGAR \n 'e' to quit the game \n > ")

    while choice != '1' and choice != '2' and choice != '3' and choice != '4' and choice != '5' and choice != 'e':
        print("Invalid choice. Please enter a valid choice.")
        choice = input(
            "Enter \n '1' to stay here \n '2' to go to the TERMINAL \n '3' to go to the FUEL TANK \n '4' to go to the ATC TOWER \n '5' to go to the HANGAR \n 'e' to quit the game \n > ")
    return choice


def terminal():
    """
    Function: terminal
    Description: This function represents the terminal location where the player can choose to go to the lounge, ticket counter, or security checkpoint.
    Parameters: None
    Returns: str
    """
    if 'atc_key' and 's_key' in inventory and cash >= 70000:
        print(
            "You have all the keys and can go to the air traffic control tower and hangar. You can also buy fuel to start the plane.")
        return '1'
    print("You are in the terminal. You can go to the lounge, ticket counter, or security checkpoint.")
    choice = input(
        "Enter \n 'l' to go to the lounge \n 't' to go to the ticket counter \n 's' to go to the security checkpoint \n 'o' to go to the airline office \n '1' return to the tarmac \n 'e' to quit the game \n > ")
    while choice != 'l' and choice != 't' and choice != 's' and choice != 'o' and choice != '1' and choice != 'e':
        print("Invalid choice. Please enter a valid choice.")
        choice = input(
            "Enter \n 'l' to go to the lounge \n 't' to go to the ticket counter \n 's' to go to the security checkpoint \n 'o' to go to the airline office \n '1' return to the tarmac \n 'e' to quit the game \n > ")
    return choice


def lounge():
    """
    Function: lounge
    Description: This function represents the lounge location where the player can play a minigame to get a key to the security checkpoint.
    Parameters: None
    Returns: str
    """
    if 's_key' in inventory:
        print("You have already visited the lounge and obtained the security room key.")
        return '2'

    print("You are in the lounge. You see a security room key on the table.")
    print("You can play a minigame (guess the number) to get the key.")
    choice = input(
        "Enter \n 'start' to begin the minigame \n '2' to go back to the terminal \n 'e' to quit the game \n > ")
    while choice != 'start' and choice != '2' and choice != 'e':
        print("Invalid choice. Please enter a valid choice.")
        choice = input(
            "Enter \n 'start' to begin the minigame \n '2' to go back to the terminal \n 'e' to quit the game \n > ")

    if choice == 'start':
        print("You must guess the number from 1-50 to get the key. You will have 5 tries. I will tell you if the number is higher or lower.")
        tries = 5
        low = 1
        high = 50
        number = random.randint(low, high)

        while tries > 0:
            try:
                guess = int(input("Enter your guess: "))
            except ValueError:
                print("Invalid input. Please enter a number.")
                continue
            while guess < low or guess > high:
                print("Invalid input. Please enter a number between",
                      low, "and", high, ".")
                guess = int(input("Enter your guess: "))
            if guess == number:
                print("You got the key!")
                inventory.append('s_key')
                return '2'
            elif guess < number:
                print("Higher")
            else:
                print("Lower")
            tries -= 1

        print("You ran out of tries. Please restart the game in 15 seconds.")
        time.sleep(15)
        return lounge()
    else:
        return choice


def ticket_counter():
    """
    Function: ticket_counter
    Description: This function represents the ticket counter location where the player can play a minigame to earn cash to buy fuel.
    Parameters: None
    Returns: str
    """
    global cash
    if cash >= 70000:
        print(
            "You have enough cash to buy fuel. You can go to the fuel station. - stop gambling >:(")
        return '2'

    print("You are at the ticket counter. You can play a minigame to earn cash to buy fuel.")
    print("You can play blackjack against the computer to earn cash to buy fuel.")
    choice = input(
        "Enter \n 'start' to play the minigame \n '2' to return to the main terminal \n 'e' to quit the game \n > ")
    while choice != 'start' and choice != '2' and choice != 'e':
        print("Invalid choice. Please enter a valid choice.")
        choice = input(
            "Enter \n 'start' to play the minigame \n '2' to return to the main terminal \n 'e' to quit the game \n > ")
    if choice == 'start':
        print("You will play blackjack against the computer. You will start with $10000. Enter 'hit' or 'stand' to play.")
        cash = 10000
        while cash > 0:
            print("Your cash: $", cash)
            try:
                bet = int(input("Enter your bet: "))
            except ValueError:
                print("Invalid input. Please enter a number.")
                continue
            while bet > cash or bet <= 0:
                print("Invalid bet. Please enter a valid bet.")
                bet = int(input("Enter your bet: "))

            player_hand = random.randint(1, 11)
            computer_hand = random.randint(1, 11)
            print("Your hand: ", player_hand)
            cash -= bet

            player_choice = input("Enter 'hit' or 'stand': ")
            while player_choice != 'hit' and player_choice != 'stand':
                print("Invalid choice. Please enter a valid choice.")
                player_choice = input("Enter 'hit' or 'stand': ")
            while player_choice == 'hit':
                player_hand += random.randint(1, 11)
                print("Your hand: ", player_hand)
                if player_hand > 21:
                    print("You busted! You lose.")
                    break
                player_choice = input("Enter 'hit' or 'stand': ")
            if player_hand <= 21:
                while computer_hand < 17:
                    computer_hand += random.randint(1, 11)
                print("Computer's hand: ", computer_hand)
                if computer_hand > 21 or player_hand > computer_hand:
                    print("You win!")
                    cash += bet * 2
                else:
                    print("You lose.")
            if cash >= 70000:
                print(
                    "You have enough cash to buy fuel. You can go to the fuel station. - stop gambling >:(")
                return '2'
        print("You ran out of cash. Please try again in 15 seconds.")
        time.sleep(15)
        return 't'
    else:
        return choice


def security_checkpoint():
    """
    Function: security_checkpoint
    Description: This function represents the security checkpoint location where the player can play a minigame to get keys to the air traffic control tower and hangar.
    Parameters: None
    Returns: str
    """
    if 's_key' not in inventory:
        print("You don't have the key to the security checkpoint. Please go to the lounge to get the key.")
        return '2'
    if 'atc_key' in inventory:
        print("You have already visited the security checkpoint and obtained the ATC key.")
        return '2'

    print("You are at the the security checkpoint. You see keys on the table.")
    print("You can play wordle to get the key.")
    choice = input(
        "Enter \n 'start' to begin the minigame \n '2' to go back to the main terminal \n 'e' to quit the game \n > ")
    while choice != 'start' and choice != '2' and choice != 'e':
        print("Invalid choice. Please enter a valid choice.")
        choice = input(
            "Enter \n 'start' to begin the minigame \n '2' to go back to the main terminal \n 'e' to quit the game \n > ")
    if choice == 'start':
        return wordle()
    else:
        return choice


def office():
    """
    Function: office
    Description: This function represents the airline office location where the player can get the hangar key.
    Parameters: None
    Returns: str
    """
    if 'h_key' in inventory:
        print("You have already visited the airline office and obtained the hangar key.")
        return '2'
    print("You are at the airline office. You see the hangar key on the desk.")
    print("You can play hangman to get the key.")
    choice = input(
        "Enter \n 'start' to begin the minigame \n '2' to go back to the main terminal \n 'e' to quit the game \n > ")
    while choice != 'start' and choice != '2' and choice != 'e':
        print("Invalid choice. Please enter a valid choice.")
        choice = input(
            "Enter \n 'start' to begin the minigame \n '2' to go back to the main terminal \n 'e' to quit the game \n > ")
    if choice == 'start':
        return hangman()
    else:
        return choice


def air_traffic_control_tower():
    """
    Function: air_traffic_control_tower
    Description: This function represents the air traffic control tower location where the player can play a minigame to get items.
    Parameters: None
    Returns: str
    """
    if 'atc_key' not in inventory:
        print(
            "You need the air traffic control key to enter the air traffic control tower.")
        return '1'

    if 'blackbox' and 'radio' and 'battery' in inventory:
        print(
            "You have already visited the air traffic control tower and obtained the items.")
        return '1'

    print("You are in the air traffic control tower. You see a blackbox, battery and radio on the table.")
    print("You can pick these items up or leave.")
    choice = input("Enter '7' to get the items: ")
    if choice == '7':
        inventory.append('blackbox')
        inventory.append('radio')
        inventory.append('battery')
        print("You have obtained the blackbox, battery and radio.")
    else:
        return '5'


def hangar():
    """
    Function: hangar
    Description: This function represents the hangar location where the player can play a minigame to start the plane.
    Parameters: None
    Returns: str
    """
    if 'h_key' not in inventory:
        print("You need the hangar key to enter the hangar.")
        return '1'

    print("You are in the hangar. You see a GPU, staircase, and the plane.")
    choice = input(
        "Enter: \n 'g' to get the GPU \n 's' to get the staircase \n 'p' to enter the plane \n > ")
    if choice == 'g':
        if 'gpu' in inventory:
            print("You have already obtained the GPU.")
            return '5'
        if 'battery' not in inventory:
            print("You need a battery to start the GPU.")
            return '5'
        else:
            print(
                "You have a battery to start the GPU. To start the GPU, I will test your reaction time.")
            print("When I say GO, hit ENTER as fast as you can.")
            time.sleep(1)
            print("Ready")
            time.sleep(1)
            print("Steady")
            time.sleep(random.randint(2, 5))
            print("GO")
            tic = time.perf_counter()
            a = input()
            toc = time.perf_counter()
            time_spent = toc - tic
            if time_spent < 0.28:
                print(f"You started the GPU in less than or exactly 0.27 seconds, the average human reaction time. You are a genius! (You started the GPU in {
                      time_spent:.2f} seconds.)")
                inventory.append('gpu')
                return '5'
            else:
                print(f"You started the GPU in {
                      time_spent:.2f} seconds. You need to improve your reaction time.")
                return hangar()
    elif choice == 's':
        if 'staircase' in inventory:
            print("You have already obtained the staircase.")
            return '5'
        print("You have obtained the staircase.")
        inventory.append('staircase')
        return '5'
    elif choice == 'p':
        if 'gpu' and 'staircase' and 'blackbox' and 'radio' and 'fuel' in inventory:
            print("You have all the items to start the plane.")
            return plane()
        else:
            print("You do not have all the items to start the plane. You need the GPU, staircase, blackbox, fuel, and radio. Please go back and get the items.")
            return '5'

    else:
        return choice


def fuel_station():
    """
    Function: fuel_station
    Description: This function represents the fuel station location where the player can buy fuel to start the plane.
    Parameters: None
    Returns: str
    """
    if 'fuel' in inventory:
        print("You have already bought fuel.")
        return '1'

    global cash
    print("You are at the fuel station. You can buy fuel to start the plane.")
    print("You can buy fuel to start the plane.")
    choice = input(
        "Enter \n 'buy' to buy fuel \n '1' to go back to the tarmac \n 'e' to quit the game \n >  ")
    while choice != 'buy' and choice != '1' and choice != 'e':
        choice = input(
            "Invalid choice. Please enter \n 'buy' to buy fuel \n '1' to go back to the tarmac \n 'e' to quit the game \n >  ")
    if choice == 'buy':
        while cash < 70000:
            print("You do not have enough cash to buy fuel. Please go back to the ticket counter to earn more cash.")
            return '3'  # Return to the ticket counter
        else:
            print("You have bought fuel for $70000. You can start the plane.")
            cash -= 70000
            inventory.append('fuel')
        return '1'
    else:
        return choice


def plane():
    """
    Function: plane
    Description: This function represents the plane location where the player must start the plane to win the game.
    Parameters: None
    Returns: str
    """
    print("You are at the plane. All you need to do is start the plane to win the game.")
    choice = input("Enter 'start' to win the game! \n > ")
    while choice != 'start':
        choice = input(
            "Invalid choice. Please enter 'start' to win the game! \n > ")
    if choice == 'start':
        print(
            "Congratulations! You have started the plane and escaped the airport. You win!")
        return 'e'
    else:
        return choice


def main():
    print("Welcome to FlyFlyFly! You are at the airport and need to start the plane to escape.")

    # initialize user to start in location 1
    choice = '1'

    # Keep looping until the user exits
    while choice != 'e':
        # Depending on the user choice, call associated function
        if choice == '1':
            choice = tarmac()
        elif choice == '2':
            choice = terminal()
        elif choice == '3':
            choice = fuel_station()
        elif choice == '4':
            choice = air_traffic_control_tower()
        elif choice == '5':
            choice = hangar()
        elif choice == 's':
            choice = security_checkpoint()
        elif choice == 't':
            choice = ticket_counter()
        elif choice == 'l':
            choice = lounge()
        elif choice == 'o':
            choice = office()
        elif choice == 'p':
            choice = plane()

    print("Thanks for playing!")


# Call the main function to start the game
main()
